<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
       xsi:schemaLocation="
       http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0 http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd
       http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
       http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">

  <!-- Load Configuration File -->
  <cm:property-placeholder id="properties" persistent-id="ca.islandora.services.basic.image" update-strategy="reload">
    <cm:default-properties>
      <cm:property name="islandora.drupal.baseurl" value="localhost/islandora"/>
      <cm:property name="islandora.drupal.username" value=""/>
      <cm:property name="islandora.drupal.password" value=""/>
      <cm:property name="islandora.fcrepo.baseurl" value="localhost:8080/fcrepo/rest"/>
      <cm:property name="islandora.php.workingDir" value="/home/vagrant/islandora/camel/commands/bin"/>
      <cm:property name="islandora.triplestore.baseurl" value="localhost:8080/bigdata/namespace/kb/sparql"/>
    </cm:default-properties>
  </cm:property-placeholder>

  <!-- Islandora Component Configuration -->
  <bean id="islandora" class="ca.islandora.camel.component.IslandoraComponent">
    <argument value="${islandora.php.workingDir}"/>
  </bean>


  <camelContext id="basicImageService" xmlns="http://camel.apache.org/schema/blueprint">

    <routeContextRef ref="get"/>
    <routeContextRef ref="post"/>
    <routeContextRef ref="put"/>
    <routeContextRef ref="delete"/>

    <route>
      <from uri="jetty:http://0.0.0.0:8888/islandora/rest/basic-image/"/>
        <choice>
          <when><simple>${headers.CamelHttpMethod} == 'GET'</simple>
            <setProperty propertyName="uuid"><simple>${headers.uuid}</simple></setProperty>
            <to uri="direct:getBasicImage"/>
          </when>
          <when><simple>${headers.CamelHttpMethod} == 'POST'</simple>
            <setProperty propertyName="uuid"><simple>${headers.uuid}</simple></setProperty>
            <setProperty propertyName="node"><simple>${headers.node}</simple></setProperty>
            <filter>
              <javaScript>request.hasAttachments()</javaScript>
              <setProperty propertyName="attachment"><javaScript>request.getAttachments().values().toArray()[0]</javaScript></setProperty>
            </filter>
            <setProperty propertyName="mimetype"><simple>${headers.mimetype}</simple></setProperty>
            <to uri="direct:getCollectionUri"/>
            <to uri="direct:createBasicImage"/>
          </when>
          <when><simple>${headers.CamelHttpMethod} == 'PUT'</simple>
            <setProperty propertyName="uuid"><simple>${headers.uuid}</simple></setProperty>
            <setProperty propertyName="node"><simple>${headers.node}</simple></setProperty>
            <filter>
              <javaScript>request.hasAttachments()</javaScript>
              <setProperty propertyName="attachment"><javaScript>request.getAttachments().values().toArray()[0]</javaScript></setProperty>
            </filter>
            <setProperty propertyName="mimetype"><simple>${headers.mimetype}</simple></setProperty>
            <to uri="direct:updateBasicImage"/>
          </when>
          <when><simple>${headers.CamelHttpMethod} == 'DELETE'</simple>
            <setProperty propertyName="uuid"><simple>${headers.uuid}</simple></setProperty>
            <to uri="direct:deleteBasicImage"/>
          </when>
        </choice>
    </route>
  </camelContext>

</blueprint>
